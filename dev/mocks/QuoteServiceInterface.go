// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	context "context"
	delivery "integration_test/model/delivery"

	mock "github.com/stretchr/testify/mock"
)

// QuoteServiceInterface is an autogenerated mock type for the QuoteServiceInterface type
type QuoteServiceInterface struct {
	mock.Mock
}

// GetQuote provides a mock function with given fields: ctx, request
func (_m *QuoteServiceInterface) GetQuote(ctx context.Context, request delivery.Request) (delivery.Response, error) {
	ret := _m.Called(ctx, request)

	var r0 delivery.Response
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, delivery.Request) (delivery.Response, error)); ok {
		return rf(ctx, request)
	}
	if rf, ok := ret.Get(0).(func(context.Context, delivery.Request) delivery.Response); ok {
		r0 = rf(ctx, request)
	} else {
		r0 = ret.Get(0).(delivery.Response)
	}

	if rf, ok := ret.Get(1).(func(context.Context, delivery.Request) error); ok {
		r1 = rf(ctx, request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewQuoteServiceInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewQuoteServiceInterface creates a new instance of QuoteServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewQuoteServiceInterface(t mockConstructorTestingTNewQuoteServiceInterface) *QuoteServiceInterface {
	mock := &QuoteServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
