// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	platform "integration_test/model/platform"
)

// QuoteClientInterface is an autogenerated mock type for the QuoteClientInterface type
type QuoteClientInterface struct {
	mock.Mock
}

// Get provides a mock function with given fields: ctx, category
func (_m *QuoteClientInterface) Get(ctx context.Context, category string) ([]platform.QuoteResponse, *platform.QuoteError, error) {
	ret := _m.Called(ctx, category)

	var r0 []platform.QuoteResponse
	var r1 *platform.QuoteError
	var r2 error
	if rf, ok := ret.Get(0).(func(context.Context, string) ([]platform.QuoteResponse, *platform.QuoteError, error)); ok {
		return rf(ctx, category)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) []platform.QuoteResponse); ok {
		r0 = rf(ctx, category)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]platform.QuoteResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) *platform.QuoteError); ok {
		r1 = rf(ctx, category)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*platform.QuoteError)
		}
	}

	if rf, ok := ret.Get(2).(func(context.Context, string) error); ok {
		r2 = rf(ctx, category)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

type mockConstructorTestingTNewQuoteClientInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewQuoteClientInterface creates a new instance of QuoteClientInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewQuoteClientInterface(t mockConstructorTestingTNewQuoteClientInterface) *QuoteClientInterface {
	mock := &QuoteClientInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
